@using Microsoft.AspNetCore.Components.Routing;
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigationManager
@implements IDisposable

@code {

    protected override void OnInitialized()
    {
        _navigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ScrollToFragment();
    }

    public void Dispose()
    {
        _navigationManager.LocationChanged -= OnLocationChanged;
    }

    private async void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        await ScrollToFragment();
    }

    private async Task ScrollToFragment()
    {
        var uri = new Uri(_navigationManager.Uri, UriKind.Absolute);
        var fragment = uri.Fragment;
        if (fragment.StartsWith('#'))
        {
            var header = fragment.Substring(1);
            var index = header.IndexOf(":~:", StringComparison.Ordinal);
            if (index > 0)
            {
                header = header.Substring(0, index);
            }

            if (!string.IsNullOrEmpty(header))
            {
                await JSRuntime.InvokeVoidAsync("scrollToElementWithText", "h2", header);
            }
        }
    }
}